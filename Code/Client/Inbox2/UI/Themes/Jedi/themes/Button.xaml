<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:Inbox2.Framework.UI.Controls;assembly=Inbox2.Framework.UI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SharedDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ButtonFocusVisual -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" StrokeThickness="1"
                            Stroke="#60000000" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Button Style -->
    <Style TargetType="Button" x:Key="LooklessButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>        
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Button Style -->
    <Style TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="#19FFFFFF" RadiusX="6" RadiusY="6" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                    <GradientStop Color="#00000000" Offset="0"/>
                                    <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#33FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Button Style -->
    <Style x:Key="ButtonOnIntense" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="#33FFFFFF" RadiusX="6" RadiusY="6" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                    <GradientStop Color="#00000000" Offset="0"/>
                                    <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#66FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="EmptyTrashButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,3,0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Margin="0,5" RadiusX="5" RadiusY="5" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDA0000" Offset="0"/>
                                    <GradientStop Offset="1" Color="#FFA10000"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Margin="0,5" Stroke="#44FFFFFF" StrokeThickness="1" RadiusX="5" RadiusY="5" x:Name="rectangle2">
                        </Rectangle>
                        <StackPanel Orientation="Horizontal">
                            <Path x:Name="deleteicon" Width="10" Height="12" Stretch="Fill" Fill="White" Margin="9,0,0,0" Data="F1 M 568.765,320L 615.697,320C 624.954,320 632.458,326.658 632.458,334.87L 632.458,345.951L 648.559,345.951C 652.241,345.951 655.225,348.936 655.225,352.617L 655.225,383.399C 655.225,387.081 652.241,390.066 648.559,390.066L 644.75,390.066L 644.75,466.399L 537.478,466.399L 537.478,390.066L 533.389,390.066C 529.707,390.066 526.722,387.081 526.722,383.399L 526.722,352.617C 526.722,348.936 529.707,345.951 533.389,345.951L 552.004,345.951L 552.004,334.87C 552.004,326.658 559.508,320 568.765,320 Z M 573.235,330.089C 567.681,330.089 563.178,334.084 563.178,339.011L 563.178,345.951L 619.328,345.951L 619.328,339.011C 619.328,334.084 614.826,330.089 609.272,330.089L 573.235,330.089 Z M 618.431,379.79C 614.728,379.79 611.726,382.792 611.726,386.495L 611.726,432.566C 611.726,436.269 614.728,439.271 618.431,439.271C 622.133,439.271 625.135,436.269 625.135,432.566L 625.135,386.495C 625.135,382.792 622.133,379.79 618.431,379.79 Z M 591.56,379.79C 587.857,379.79 584.855,382.792 584.855,386.495L 584.855,432.566C 584.855,436.269 587.857,439.271 591.56,439.271C 595.263,439.271 598.264,436.269 598.264,432.566L 598.264,386.495C 598.264,382.792 595.263,379.79 591.56,379.79 Z M 564.795,379.79C 561.092,379.79 558.09,382.792 558.09,386.495L 558.09,432.566C 558.09,436.269 561.092,439.271 564.795,439.271C 568.497,439.271 571.499,436.269 571.499,432.566L 571.499,386.495C 571.499,382.792 568.497,379.79 564.795,379.79 Z "/>
                            <ContentPresenter Margin="9,-2,9,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="White" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle2" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEE0404" Offset="0"/>
                                        <GradientStop Offset="1" Color="#FFB10303"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="HeaderNewButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,3,0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Margin="0,4" Stroke="#26FFFFFF" RadiusX="5" RadiusY="5" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                    <GradientStop Color="#12000000" Offset="0"/>
                                    <GradientStop Color="#12FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter Margin="9,-2,9,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#cce3ff" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ButtonBase" x:Key="HeaderNotSyncedButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Margin="0,4" Stroke="Transparent" Fill="Transparent" RadiusX="5" RadiusY="5" x:Name="rectangle">
                            
                        </Rectangle>
                        <ContentPresenter Margin="5,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#cce3ff" />
                                    <Setter Property="TextDecorations" Value="Underline" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ButtonBase" x:Key="ActionsButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Stroke="Transparent" RadiusX="3" RadiusY="3" x:Name="rectangle" Margin="0,2"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#cce3ff" />
                                    <Setter Property="Padding" Value="7,0" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ButtonBase" x:Key="ViewAllFrom">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Stroke="#44FFFFFF" RadiusX="5" RadiusY="5" x:Name="rectangle" Margin="0,2" Fill="{StaticResource HighlightGradient9}"/>
                        <Grid Margin="7" >
                            <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-search-white.png" Width="19" Height="19" x:Name="image" HorizontalAlignment="Left" VerticalAlignment="Top" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="20,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{StaticResource DefaultClickableColor}" />
                                        <Setter Property="Padding" Value="7,0" />
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource HighlightColor9}"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource HighlightGradient8}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ButtonBase" x:Key="ActivityActionsButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Stroke="Transparent" RadiusX="3" RadiusY="3" x:Name="rectangle" Margin="0,2"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#cce3ff" />
                                    <Setter Property="Padding" Value="7,0" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource HighlightGradient9}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ButtonBase" x:Key="DetailActionsButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1" Background="{StaticResource LabelBackgroundBrush1}" CornerRadius="4" x:Name="OuterBorder" Margin="0,2">
                            <Border Background="{StaticResource HighlightGradient8}" x:Name="MiddleBorder" CornerRadius="4">
                                <Border BorderBrush="{StaticResource HighlightColor2}" x:Name="InnerBorder" CornerRadius="4" BorderThickness="0,1,0,0" />
                            </Border>
                        </Border>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Padding" Value="12,0" />
                                    <Setter Property="Opacity" Value="0.7" />
                                </Style>
                            </ContentPresenter.Resources>
                            <ContentPresenter.Effect>
                                <DropShadowEffect Color="White" Direction="270" BlurRadius="0" ShadowDepth="1" Opacity="0.3" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="Tag" Value="WaitButton">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource LabelBackgroundBrush2}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="SomedayButton">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource LabelBackgroundBrush3}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Background" TargetName="MiddleBorder" Value="{StaticResource HighlightGradient2}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="MiddleBorder" Value="{StaticResource ShadowColor6}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ButtonBase" x:Key="ActivityActionsDropDownButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Stroke="Transparent" RadiusX="3" RadiusY="3" x:Name="rectangle" Margin="0,2"/>
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="#cce3ff" />
                                        <Setter Property="Padding" Value="7,0" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <Path  x:Name="Arrow"
                              Fill="{StaticResource HighlightColor11}" Opacity="0.6" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" Width="7" Height="4" Stretch="Fill" Data="M320,80 L351.5,80 335.5,103.5 z" Margin="-1,1,6,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource HighlightGradient9}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="FromHeaderButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                        <Rectangle Stroke="Transparent" RadiusX="3" RadiusY="3" x:Name="rectangle" Margin="0,2" Opacity="0.2"/>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#009ae2" />
                                    <Setter Property="Padding" Value="7,0" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ShadowColor5}"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource HighlightGradient8}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="controls:CountButton" x:Key="LightNotifierButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="MinWidth" Value="23"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CountButton}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderThickness="1" CornerRadius="5" >
                            <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="5"/>
                        </Border>

                        <Image Name="img" SnapsToDevicePixels="True" Width="15" Height="15" Margin="0" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" />

                        <Canvas Margin="12,-2,0,0" VerticalAlignment="Top" Visibility="{TemplateBinding Count, Converter={StaticResource CountToVisibilityConverter}}">
                            <Border Style="{StaticResource NotifyNumberBorder}" Width="Auto" Opacity="0.6">
                                <!-- For some reason this binding needs the PassThroughConverter, not sure why -->
                                <TextBlock Text="{TemplateBinding Count, Converter={StaticResource PassThroughConverter}}" Style="{StaticResource NotifyNumbersTextBlock}" />
                            </Border>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="TwitterButton">                            
                            <Setter Property="Source" TargetName="img" Value="/Inbox2.UI.Resources;component/icons/icon-twitter.png" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource TwitterIconOuterBackground}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource TwitterIconOuterBrush}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource TwitterIconInnerBorderBrush}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="FacebookButton">
                            <Setter Property="Source" TargetName="img" Value="/Inbox2.UI.Resources;component/icons/icon-facebook.png" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource FacebookIconOuterBackground}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FacebookIconOuterBrush}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource FacebookIconInnerBorderBrush}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="BlogButton">                            
                            <Setter Property="Source" TargetName="img" Value="/Inbox2.UI.Resources;component/icons/icon-blog.png" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource BlogIconOuterBackground}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource BlogIconOuterBrush}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource BlogIconInnerBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="TwitterButton"/>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource TwitterIconOuterMouseOverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="TwitterButton"/>
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource TwitterIconOuterPressedBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="FacebookButton"/>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource FacebookIconOuterMouseOverBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="FacebookButton"/>
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource FacebookIconOuterPressedBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="BlogButton"/>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource BlogIconOuterMouseOverBackground}" />                            
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Tag" Value="BlogButton"/>
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource BlogIconOuterPressedBackground}" />
                        </MultiTrigger>                     
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="LightButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1" Background="{StaticResource HighlightGradient4}" CornerRadius="5" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" CornerRadius="5"/>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Image x:Name="Image" Source="/Inbox2.UI.Themes.Jedi;component/icons/send-message-icon.png" Visibility="Collapsed" SnapsToDevicePixels="True" Width="32" Height="19" Margin="1,0,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center"/>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
    										  VerticalAlignment="Center" 
    										  RecognizesAccessKey="True" x:Name="CP"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="CP" Value="0.6" />
                        </Trigger>
                        <Trigger Property="Tag" Value="NoBorders">
                            <Setter Property="Background" TargetName="OuterBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="Tag" Value="OptionsToolButton">
                            <Setter Property="Background" TargetName="OuterBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent" />
                            <Setter Property="Visibility" TargetName="CP" Value="Collapsed" />
                            <Setter Property="Source" TargetName="Image" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon-tool.png" />
                            <Setter Property="Visibility" TargetName="Image" Value="Visible" />
                            <Setter Property="Width" TargetName="Image" Value="18" />
                            <Setter Property="Height" TargetName="Image" Value="18" />
                            <Setter Property="Margin" TargetName="Image" Value="0,1,1,0" />
                            <Setter Property="Opacity" TargetName="Image" Value="0.45" />
                        </Trigger>
                        <Trigger Property="Tag" Value="HelpButton">
                            <Setter Property="Background" TargetName="OuterBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent" />
                            <Setter Property="Visibility" TargetName="CP" Value="Collapsed" />
                            <Setter Property="Source" TargetName="Image" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon-help.png" />
                            <Setter Property="Visibility" TargetName="Image" Value="Visible" />
                            <Setter Property="Width" TargetName="Image" Value="18" />
                            <Setter Property="Height" TargetName="Image" Value="18" />
                            <Setter Property="Margin" TargetName="Image" Value="0,1,1,0" />
                            <Setter Property="Opacity" TargetName="Image" Value="0.45" />
                        </Trigger>						
						<Trigger Property="Tag" Value="SendButton">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient3}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Visibility" TargetName="Image" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor5}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionPopupButton" BasedOn="{StaticResource LightButton}" TargetType="{x:Type Button}" />

    <Style TargetType="Button" x:Key="LightButtonOnNoticer">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource NoticerForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor4}" BorderThickness="1" Background="{StaticResource HighlightGradient4}" CornerRadius="5" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor11}" BorderThickness="1" CornerRadius="5"/>
                        </Border>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="LightButtonSendReceive">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1" Background="{StaticResource HighlightGradient4}" CornerRadius="5" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" CornerRadius="5"/>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-send-receive.png" SnapsToDevicePixels="True" Width="14" Height="8" Margin="0,1,5,0" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  RecognizesAccessKey="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
    
    <Style TargetType="Button" x:Key="LightButtonSplitButtonLeft">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1,1,0,1" Background="{StaticResource HighlightGradient4}" CornerRadius="5,0,0,5" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" CornerRadius="5,0,0,5" />
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image x:Name="image" Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-send-receive.png" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="14" Height="8" Margin="0,1,5,0" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="Center" 
										  RecognizesAccessKey="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="Tag" Value="NewMessage">
                            <Setter Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/newmessage-icon.png" TargetName="image"/>
                            <Setter Property="Width" Value="18" TargetName="image"/>
                            <Setter Property="Height" Value="18" TargetName="image"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="GodMode">
                            <!--<Setter Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/newmessage-icon.png" TargetName="image"/>
                            <Setter Property="Width" Value="18" TargetName="image"/>
                            <Setter Property="Height" Value="18" TargetName="image"/>-->
                            <Setter Property="CornerRadius" Value="5" TargetName="OuterBorder" />
                            <Setter Property="CornerRadius" Value="5" TargetName="InnerBorder" />
                            <Setter Property="BorderThickness" Value="1" TargetName="OuterBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="BitlyButtonSplitButtonLeft">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1,1,0,1" Background="{StaticResource HighlightGradient4}" CornerRadius="3,0,0,3" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" CornerRadius="3,0,0,3" />
                        </Border>
                        <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/bitly.png" SnapsToDevicePixels="True" Width="20" Height="15" Margin="1,0,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.8"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="LightButtonTextOnly">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1" Background="{StaticResource HighlightGradient4}" CornerRadius="5" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" CornerRadius="5"/>
                        </Border>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource PressedBrush}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource HighlightColor5}" />
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="GodModeSplitButtonLeft">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource CallToActionHighLightGradient1}"  BorderThickness="1,1,0,1" Background="{StaticResource CallToActionGradient1}" CornerRadius="5,0,0,5" >
                            <Border x:Name="InnerBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="5,0,0,5" />
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image x:Name="image" Source="/Inbox2.UI.Resources;component/icons/icon-godmode.png" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="18" Height="18" Margin="0,0,5,0" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="Center" 
										  RecognizesAccessKey="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource CallToActionGradient2}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource CallToActionHighLightGradient2}" />
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dock Toggle Button Style -->
    <Style TargetType="Button" x:Key="WysiwygButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,2,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" x:Name="Border" CornerRadius="2"/>
                        <Border x:Name="InnerBorder" VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" ClipToBounds="True" Margin="3">
                            <Image x:Name="Image" HorizontalAlignment="Left" VerticalAlignment="Top" Source="/Inbox2.UI.Themes.Jedi;component/icons/wysiwyg.gif" RenderOptions.BitmapScalingMode="NearestNeighbor"  Width="96" Height="96"  Opacity="0.8"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="IncreaseFontSize"><Setter Property="Margin" TargetName="Image" Value="0,-80,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="DecreaseFontSize"><Setter Property="Margin" TargetName="Image" Value="-64,-80,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="UL"><Setter Property="Margin" TargetName="Image" Value="-16,-48,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="OL"><Setter Property="Margin" TargetName="Image" Value="-32,-48,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="Indent"><Setter Property="Margin" TargetName="Image" Value="-64,0,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="Outdent"><Setter Property="Margin" TargetName="Image" Value="-80,0,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="Style"><Setter Property="Margin" TargetName="Image" Value="-16,-80,0,0" /></Trigger>
                        <Trigger Property="Tag" Value="RemoveFormat"><Setter Property="Margin" TargetName="Image" Value="-32,-80,0,0" /></Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ShadowColor5}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="LightWhiteButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="Silver" RadiusX="6" RadiusY="6" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                    <GradientStop Color="#26FFFFFF" Offset="1"/>
                                    <GradientStop Color="#26000000" Offset="0"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="White" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#3F000000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="rectangle" Value="#38000000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Folder Button Style -->
    <Style TargetType="Button" x:Key="FolderButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#b7d3ff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="25" x:Name="grid" Margin="0">
                        <Rectangle Stroke="Transparent" x:Name="rectangle" Fill="Transparent"/>
                        <Border Padding="10,0" BorderThickness="0" x:Name="border" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="Left" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#33FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Stroke" TargetName="rectangle" Value="Transparent"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Folder Button Style -->
    <Style TargetType="Button" x:Key="PublicPageFolderButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#b7d3ff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="25" x:Name="grid" Margin="0">
                        <Rectangle Stroke="Transparent" x:Name="rectangle" Fill="Transparent"/>
                        <Border Padding="10,0" BorderThickness="0" x:Name="border" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="Auto" VerticalAlignment="Center" SnapsToDevicePixels="True" >
                                <ContentPresenter HorizontalAlignment="Left" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                                <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-external.gif" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Width="8" Height="8" Margin="5,1,0,0"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#33FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="Stroke" TargetName="rectangle" Value="Transparent"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuickReplyAllSplitLeftButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="65"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource ShadowGradient2}" BorderBrush="{StaticResource ShadowGradient2}" HorizontalAlignment="Stretch" Width="Auto" BorderThickness="0" CornerRadius="5,0,0,5" x:Name="OuterBorder">
                        <Border Background="Transparent"  BorderBrush="{StaticResource ShadowColor3}" HorizontalAlignment="Stretch" Width="Auto" BorderThickness="1"  CornerRadius="5,0,0,5" x:Name="InnerBorder">
                            <TextBlock Grid.Column="0" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" 
                                       Background="{x:Null}" 
                                       FontSize="11" 
                                       Foreground="{StaticResource TabAndLightButtonText}" 
                                       Text="{TemplateBinding Content}" 
                                       FontWeight="Bold" 
                                       Margin="10,0"
                                       Opacity="0.7" />
                        </Border>
                    </Border>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ShadowColor5}" TargetName="InnerBorder"/>
                            <Setter Property="Background" Value="{StaticResource ShadowColor4}" TargetName="InnerBorder" />
                            <Setter Property="Background" Value="{StaticResource ShadowGradient2}" TargetName="OuterBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="QuickReplyAllSplitRightButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource ShadowGradient2}" BorderBrush="{StaticResource ShadowGradient2}" BorderThickness="0" CornerRadius="0,5,5,0" x:Name="OuterBorder">
                        <Border Background="Transparent" BorderBrush="{StaticResource ShadowColor3}" BorderThickness="0,1,1,1" CornerRadius="0,5,5,0" x:Name="InnerBorder">
                            <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-external-strong.gif" Margin="8,0" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Width="8" Height="8" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ShadowColor5}" TargetName="InnerBorder"/>
                            <Setter Property="Background" Value="{StaticResource ShadowColor4}" TargetName="InnerBorder" />
                            <Setter Property="Background" Value="{StaticResource ShadowGradient2}" TargetName="OuterBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type controls:DropDownButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border x:Name="Border" Background="Transparent" CornerRadius="0,0,6,0" />
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightGradient8}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderButton" BasedOn="{x:Null}" TargetType="{x:Type Button}" >
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource HeaderButtonBackground}" BorderBrush="{StaticResource HighlightColor12}" BorderThickness="0,0,0,1">
                        <Border BorderBrush="{StaticResource ShadowColor2}" BorderThickness="0,0,0,1">
                            <Border BorderBrush="{StaticResource ShadowColor1}" BorderThickness="0,1,0,0">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" Margin="10,0" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FolderHeaderButton" BasedOn="{x:Null}" TargetType="{x:Type Button}" >
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource HighlightGradient1}" BorderBrush="{StaticResource HighlightColor9}" BorderThickness="0,0,0,1">
                        <Border BorderBrush="{StaticResource ShadowColor2}" BorderThickness="0,0,0,1">
                            <Border BorderBrush="{StaticResource ShadowColor1}" BorderThickness="0,1,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-folder.png" Width="19" Height="19" Margin="10,0,5,0" x:Name="image" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" Margin="0,0,10,0" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dock Button with text -->
    <Style x:Key="RefreshButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" Stroke="Transparent" HorizontalAlignment="Stretch" Margin="2,2" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="5" RadiusY="5" Grid.ColumnSpan="2" x:Name="rectangle" />
                        <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon_refresh.png" Width="16" Height="16" Margin="10,0,0,0" x:Name="image"/>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" FontSize="12" Foreground="#FFA6C2E6" Text="{TemplateBinding Content}" FontWeight="Bold" Margin="5,0,15,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ShowAllunreadButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" Stroke="Transparent" HorizontalAlignment="Stretch" Margin="2,2" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="5" RadiusY="5" Grid.ColumnSpan="2" x:Name="rectangle" />
                        <Border Margin="6,8,0,0">
                            <controls:Bitmap Source="pack://application:,,,/Inbox2.UI.Themes.Jedi;component/icons/icon_search_small.png" x:Name="image" />
                        </Border>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" FontSize="12" Foreground="#FFA6C2E6" Text="{TemplateBinding Content}" FontWeight="Bold" Margin="5,0,15,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="UserStatusActionButton" TargetType="{x:Type Button}">
		<Setter Property="Height" Value="20"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" CornerRadius="3">
                        <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" CornerRadius="3">
                            <Image x:Name="image" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" Margin="0,1,0,0" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="Reply">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon-replyat-small-white.png"/>
						</Trigger>
						<Trigger Property="Tag" Value="Share">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon-share-small-white.png"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource ShadowColor3}" TargetName="InnerBorder"/>
                            <Setter Property="Background" Value="{StaticResource HighlightGradient8}" TargetName="OuterBorder" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource ShadowColor5}" TargetName="InnerBorder"/>
							<Setter Property="Background" Value="{StaticResource ShadowColor4}" TargetName="InnerBorder" />
							<Setter Property="Background" Value="{StaticResource ShadowGradient2}" TargetName="OuterBorder" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.4" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Message detail button -->
    <Style x:Key="MessageDetailButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" CornerRadius="3" x:Name="OuterBorder">
                        <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" CornerRadius="3" x:Name="InnerBorder">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Margin="4,1,0,0" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" Grid.Column="0" Source="/Inbox2.UI.Themes.Jedi;component/icons/icon_reply_small.png" x:Name="image"/>
                                <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" FontSize="11" Foreground="{StaticResource TabAndLightButtonText}" Text="{TemplateBinding Content}" FontWeight="Bold" Margin="5,0,10,0" Opacity="0.7"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="ReplyAll">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon_replyall_small.png"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Forward">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon_forward_small.png"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="Delete">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon_delete_small.png"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="MarkRead">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon_mark_small.png"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="MarkUnread">
                            <Setter TargetName="image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon_markunread_small.png"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ShadowColor3}" TargetName="InnerBorder"/>
                            <Setter Property="Background" Value="{StaticResource ShadowGradient2}" TargetName="OuterBorder" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ShadowColor5}" TargetName="InnerBorder"/>
                            <Setter Property="Background" Value="{StaticResource ShadowColor4}" TargetName="InnerBorder" />
                            <Setter Property="Background" Value="{StaticResource ShadowGradient2}" TargetName="OuterBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" Stroke="Transparent" HorizontalAlignment="Stretch" Margin="2,2" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Grid.ColumnSpan="2" x:Name="rectangle" />
                        <Border Margin="6,8,0,0">
                            <Image Source="pack://application:,,,/Inbox2.UI.Themes.Jedi;component/icons/icon_back.png" Width="16" Height="16" Margin="10,0,0,0" x:Name="image"/>
                        </Border>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" FontSize="11" Foreground="#FFA6C2E6" Text="{TemplateBinding Content}" FontWeight="Bold" Margin="5,0,15,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Exit Button Save Style -->
    <Style x:Key="ExitButtonSave" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="260" />
        <Setter Property="Height" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="85"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" Stroke="#19FFFFFF" HorizontalAlignment="Stretch" Margin="2,2" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="5" RadiusY="5" Grid.ColumnSpan="2" x:Name="rectangle" />
                        <Border Margin="6,27,0,0">
                            <controls:Bitmap  Source="pack://application:,,,/Inbox2.UI.Themes.Jedi;component/icons/save.png" x:Name="image"/>
                        </Border>
                        <StackPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <ContentPresenter RecognizesAccessKey="True" >
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                        <Setter Property="Margin" Value="0,20,30,10"/>
                                        <Setter Property="Width" Value="auto" />
                                        <Setter Property="FontSize" Value="20" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <TextBlock Text="You will be automatically logged in next time you start Inbox2" TextWrapping="Wrap" Margin="0,0,30,0"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Exit Button Don't Save Style -->
    <Style x:Key="ExitButtonDontSave" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="260" />
        <Setter Property="Height" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="85"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" Stroke="#19FFFFFF" HorizontalAlignment="Stretch" Margin="2,2" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="5" RadiusY="5" Grid.ColumnSpan="2" x:Name="rectangle" />
                        <Border Margin="6,27,0,0" >
                            <controls:Bitmap Source="pack://application:,,,/Inbox2.UI.Themes.Jedi;component/icons/dontsave.png" x:Name="image" />
                        </Border>
                        <StackPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <ContentPresenter RecognizesAccessKey="True" >
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                        <Setter Property="Margin" Value="0,20,30,10"/>
                                        <Setter Property="Width" Value="auto" />
                                        <Setter Property="FontSize" Value="20" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <TextBlock Text="You have to log in next time Inbox2 starts" TextWrapping="Wrap" Margin="0,0,30,0"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Channel Add Button Style -->
    <Style x:Key="ChannelAddButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="66"/>
        <Setter Property="Width" Value="66"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="ChannelAddButtonBorder" 
                                Background="{StaticResource ChannelAddGradient}"
                                BorderBrush="#B4CBDC" 
                                BorderThickness="1" 
                                Width="66" 
                                Height="66" 
                                CornerRadius="6">
                        </Border>
                        <Image x:Name="ChannelAddButtonImage" 
                               Width="60" 
                               Stretch="Uniform" 
                               Source="{TemplateBinding Tag}">
                        </Image>
                        <!--<Border BorderBrush="#272B2D" BorderThickness="0.3,0.3,0.3,0" Background="#50FFFFFF" Width="66" Height="33" CornerRadius="6,6,0,0" VerticalAlignment="Top" />-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BitmapEffect" Value="{StaticResource ChannelAddButtonOverOuterGlow}" />
                            <Setter TargetName="ChannelAddButtonBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Call To Action Button -->
    <Style TargetType="Button" x:Key="CallToActionButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel x:Name="CallToActionStackPannel" Orientation="Vertical">
                        <Grid x:Name="CallToActionGrid">
                            <Border x:Name="OuterBorder" BorderBrush="{StaticResource CallToActionHighLightGradient1}" BorderThickness="1" Background="{StaticResource CallToActionGradient1}" CornerRadius="7" >
                                <Border x:Name="InnerBorder" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="7"/>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
										  RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="FontSize" Value="30" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="Foreground" Value="{StaticResource CallToActionButtonText}" />
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="0" Direction="90" ShadowDepth="1" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Margin" Value="58,0,58,3" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource CallToActionGradient2}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource CallToActionHighLightGradient2}" />
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Channel Quick Setup Button Style -->
    <Style x:Key="ChannelQuickSetupButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Stroke="#FFAABEDB" RadiusX="7" RadiusY="7">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD2D2D2" Offset="1"/>
                                    <GradientStop Color="#FFFFFFFF" Offset="0.8"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFAABEDB"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2D2D2"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.3"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFAABEDB"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2D2D2"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.6"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SetupButtonStyle -->
    <Style x:Key="SetupHeaderButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="273"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="Border"
                        CornerRadius="10" 
                        BorderThickness="0.5"
                        Background="#00FFFFFF"
                        BorderBrush="#00FFFFFF"
                        >
                        <ContentPresenter RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="2"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Channel Setup Button Style -->
    <Style x:Key="ChannelIconSmallButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Stroke="#FFAABEDB" RadiusX="7" RadiusY="7">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD2D2D2" Offset="1"/>
                                    <GradientStop Color="#FFFFFFFF" Offset="0.8"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="Tag" Value="ChannelIconSmallerButton">
                            <Setter Property="RadiusX" Value="4" TargetName="rectangle" />
                            <Setter Property="RadiusY" Value="4" TargetName="rectangle" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFAABEDB"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2D2D2"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.3"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#FFAABEDB"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFD2D2D2"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.6"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuickMenuReplyButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Rectangle RadiusX="6" RadiusY="6" Fill="{DynamicResource LightBlueGradientOver}"  Stroke="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="rectangle"/>
                        <Path x:Name="replyicon" Width="24" Height="18" Stretch="Fill" Fill="White" Data="F1 M 136,159.147L 209,117L 209,143L 253,143C 278.957,143 300,121.957 300,96L 300,128C 300,153.957 278.957,175 253,175L 209,175L 209,201.293L 136,159.147 Z "/>
                        <Rectangle Stroke="#272B2D" StrokeThickness="0.3" Fill="#50FFFFFF" Width="32" Height="33" RadiusX="6" RadiusY="6" Clip="M0,0 L33,0 L33,16 L0,16 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="replyicon" Property="Fill" Value="{DynamicResource FillOnLightBlue}" />
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource LightBlueGradient}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalReplyButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent"/>
                        <Path x:Name="replyicon" Width="14.5" Height="11" Stretch="Fill" Fill="Black" Opacity="0.35" Data="F1 M 136,159.147L 209,117L 209,143L 253,143C 278.957,143 300,121.957 300,96L 300,128C 300,153.957 278.957,175 253,175L 209,175L 209,201.293L 136,159.147 Z "/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="replyicon" Property="Opacity" Value="1"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuickMenuReplyAllButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Rectangle RadiusX="6" RadiusY="6" Fill="{DynamicResource LightBlueGradientOver}"  Stroke="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="rectangle"/>
                        <Path x:Name="replyallicon" Width="25" Height="16" Stretch="Fill" Fill="White" Data="F1 M38,20.706999 L38,36.295017 -7.999999,62.85305 38,89.412079 38,105.0001 -35,62.85305 38,20.706999 z M164,-1.7881393E-07 L164,32 C164,57.957001 142.95697,79 117,79 L73,79 73,105.293 1.385808E-06,63.147003 73,21 73,47 117,47 C142.95697,47 164,25.957001 164,-1.7881393E-07 z"/>
                        <Rectangle Stroke="#272B2D" StrokeThickness="0.3" Fill="#50FFFFFF" Width="32" Height="33" RadiusX="6" RadiusY="6" Clip="M0,0 L33,0 L33,16 L0,16 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="replyallicon" Property="Fill" Value="{DynamicResource FillOnLightBlue}" />
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource LightBlueGradient}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalReplyAllButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent"/>
                        <Path x:Name="replyallicon" Width="19" Height="11" Stretch="Fill" Fill="Black" Opacity="0.35" Data="F1 M38,20.706999 L38,36.295017 -7.999999,62.85305 38,89.412079 38,105.0001 -35,62.85305 38,20.706999 z M164,-1.7881393E-07 L164,32 C164,57.957001 142.95697,79 117,79 L73,79 73,105.293 1.385808E-06,63.147003 73,21 73,47 117,47 C142.95697,47 164,25.957001 164,-1.7881393E-07 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="replyallicon" Property="Opacity" Value="1"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuickMenuForwardButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Rectangle RadiusX="6" RadiusY="6" Fill="{DynamicResource LightBlueGradientOver}"  Stroke="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="rectangle"/>
                        <Path x:Name="forwardicon" Width="21" Height="13" Stretch="Fill" Margin="0,1,0,0" Fill="White" Data="F1 M 309,405.853L 236,448L 236,421.707L 145,421.707L 145,389.707L 236,389.707L 236,363.707L 309,405.853 Z "/>
                        <Rectangle Stroke="#272B2D" StrokeThickness="0.3" Fill="#50FFFFFF" Width="32" Height="33" RadiusX="6" RadiusY="6" Clip="M0,0 L33,0 L33,16 L0,16 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="forwardicon" Property="Fill" Value="{DynamicResource FillOnLightBlue}" />
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource LightBlueGradient}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalForwardButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent"/>
                        <Path x:Name="forwardicon" Width="14.5" Height="9" Stretch="Fill" Fill="Black" Opacity="0.35" Data="F1 M 309,405.853L 236,448L 236,421.707L 145,421.707L 145,389.707L 236,389.707L 236,363.707L 309,405.853 Z "/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="forwardicon" Property="Opacity" Value="1"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalDeleteButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent"/>
                        <Path x:Name="deleteicon" Width="10" Height="12" Stretch="Fill" Fill="{StaticResource DefaultForegroundColor}" Opacity="0.35" Data="F1 M 568.765,320L 615.697,320C 624.954,320 632.458,326.658 632.458,334.87L 632.458,345.951L 648.559,345.951C 652.241,345.951 655.225,348.936 655.225,352.617L 655.225,383.399C 655.225,387.081 652.241,390.066 648.559,390.066L 644.75,390.066L 644.75,466.399L 537.478,466.399L 537.478,390.066L 533.389,390.066C 529.707,390.066 526.722,387.081 526.722,383.399L 526.722,352.617C 526.722,348.936 529.707,345.951 533.389,345.951L 552.004,345.951L 552.004,334.87C 552.004,326.658 559.508,320 568.765,320 Z M 573.235,330.089C 567.681,330.089 563.178,334.084 563.178,339.011L 563.178,345.951L 619.328,345.951L 619.328,339.011C 619.328,334.084 614.826,330.089 609.272,330.089L 573.235,330.089 Z M 618.431,379.79C 614.728,379.79 611.726,382.792 611.726,386.495L 611.726,432.566C 611.726,436.269 614.728,439.271 618.431,439.271C 622.133,439.271 625.135,436.269 625.135,432.566L 625.135,386.495C 625.135,382.792 622.133,379.79 618.431,379.79 Z M 591.56,379.79C 587.857,379.79 584.855,382.792 584.855,386.495L 584.855,432.566C 584.855,436.269 587.857,439.271 591.56,439.271C 595.263,439.271 598.264,436.269 598.264,432.566L 598.264,386.495C 598.264,382.792 595.263,379.79 591.56,379.79 Z M 564.795,379.79C 561.092,379.79 558.09,382.792 558.09,386.495L 558.09,432.566C 558.09,436.269 561.092,439.271 564.795,439.271C 568.497,439.271 571.499,436.269 571.499,432.566L 571.499,386.495C 571.499,382.792 568.497,379.79 564.795,379.79 Z "/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="deleteicon" Property="Opacity" Value="1"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuickMenuCloseButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center"  SnapsToDevicePixels="True">
                        <Rectangle RadiusX="6" RadiusY="6" Fill="{DynamicResource LightBlueGradientOver}"  Stroke="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="rectangle"/>
                        <Path x:Name="deleteicon" Width="15" Height="19" Stretch="Fill" Fill="White" Data="F1 M 568.765,320L 615.697,320C 624.954,320 632.458,326.658 632.458,334.87L 632.458,345.951L 648.559,345.951C 652.241,345.951 655.225,348.936 655.225,352.617L 655.225,383.399C 655.225,387.081 652.241,390.066 648.559,390.066L 644.75,390.066L 644.75,466.399L 537.478,466.399L 537.478,390.066L 533.389,390.066C 529.707,390.066 526.722,387.081 526.722,383.399L 526.722,352.617C 526.722,348.936 529.707,345.951 533.389,345.951L 552.004,345.951L 552.004,334.87C 552.004,326.658 559.508,320 568.765,320 Z M 573.235,330.089C 567.681,330.089 563.178,334.084 563.178,339.011L 563.178,345.951L 619.328,345.951L 619.328,339.011C 619.328,334.084 614.826,330.089 609.272,330.089L 573.235,330.089 Z M 618.431,379.79C 614.728,379.79 611.726,382.792 611.726,386.495L 611.726,432.566C 611.726,436.269 614.728,439.271 618.431,439.271C 622.133,439.271 625.135,436.269 625.135,432.566L 625.135,386.495C 625.135,382.792 622.133,379.79 618.431,379.79 Z M 591.56,379.79C 587.857,379.79 584.855,382.792 584.855,386.495L 584.855,432.566C 584.855,436.269 587.857,439.271 591.56,439.271C 595.263,439.271 598.264,436.269 598.264,432.566L 598.264,386.495C 598.264,382.792 595.263,379.79 591.56,379.79 Z M 564.795,379.79C 561.092,379.79 558.09,382.792 558.09,386.495L 558.09,432.566C 558.09,436.269 561.092,439.271 564.795,439.271C 568.497,439.271 571.499,436.269 571.499,432.566L 571.499,386.495C 571.499,382.792 568.497,379.79 564.795,379.79 Z "/>
                        <Rectangle Stroke="#272B2D" StrokeThickness="0.3" Fill="#50FFFFFF" Width="32" Height="33" RadiusX="6" RadiusY="6" Clip="M0,0 L33,0 L33,16 L0,16 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="deleteicon" Property="Fill" Value="{DynamicResource FillOnLightBlue}" />
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource LightBlueGradient}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GlobalCloseButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Path x:Name="closeicon" Width="9" Height="9" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource HighlightColor6}" Data="F1 M15.556105,-2.6627852E-06 L49.029743,33.473198 82.503395,-2.6627852E-06 98.059441,15.556042 64.586098,49.02935 98.059441,82.502251 82.503395,98.059296 49.029743,64.585686 15.556105,98.059296 3.4133496E-05,82.502251 33.473385,49.02935 3.4133496E-05,15.556042 15.556105,-2.6627852E-06 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalLabelRemoveButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="7" Height="7" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Path x:Name="closeicon" Width="7" Height="7" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ShadowColor6}" Data="F1 M15.556105,-2.6627852E-06 L49.029743,33.473198 82.503395,-2.6627852E-06 98.059441,15.556042 64.586098,49.02935 98.059441,82.502251 82.503395,98.059296 49.029743,64.585686 15.556105,98.059296 3.4133496E-05,82.502251 33.473385,49.02935 3.4133496E-05,15.556042 15.556105,-2.6627852E-06 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="closeicon" Property="Fill" Value="{StaticResource ShadowColor7}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalCloseButtonOnLight" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Path x:Name="closeicon" Width="9" Height="9" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ShadowColor1}" Data="F1 M15.556105,-2.6627852E-06 L49.029743,33.473198 82.503395,-2.6627852E-06 98.059441,15.556042 64.586098,49.02935 98.059441,82.502251 82.503395,98.059296 49.029743,64.585686 15.556105,98.059296 3.4133496E-05,82.502251 33.473385,49.02935 3.4133496E-05,15.556042 15.556105,-2.6627852E-06 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalCloseButtonOnDark" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Path x:Name="closeicon" Width="9" Height="9" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource HighlightColor11}" Data="F1 M15.556105,-2.6627852E-06 L49.029743,33.473198 82.503395,-2.6627852E-06 98.059441,15.556042 64.586098,49.02935 98.059441,82.502251 82.503395,98.059296 49.029743,64.585686 15.556105,98.059296 3.4133496E-05,82.502251 33.473385,49.02935 3.4133496E-05,15.556042 15.556105,-2.6627852E-06 z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderCloseButton" BasedOn="{StaticResource GlobalCloseButtonOnLight}" TargetType="{x:Type Button}" />

    <Style x:Key="GlobalDockButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinWidth="19" Width="Auto" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <StackPanel Orientation="Horizontal" MinWidth="8" Margin="5,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image x:Name="Image" Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-external-gray.gif" SnapsToDevicePixels="True" Width="8" Height="8" Margin="1,-1,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            <ContentPresenter x:Name="contentPresenter" Margin="6,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center"  RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>                        
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                        <Trigger Property="Tag" Value="UndockAction">
                            <Setter Property="Source" TargetName="Image" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon-internal-gray.gif" />
                        </Trigger>
                        <Trigger Property="Tag" Value="MarkAllRead">
                            <Setter Property="Source" TargetName="Image" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon_mark_small_gray.png"/>
                        </Trigger>
                        <Trigger Property="Button.HasContent" Value="False">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalPinButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Image x:Name="Image" Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-unpinned.gif" SnapsToDevicePixels="True" Width="10" Height="7" Margin="0" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="Tag" Value="UnpinAction">
                               <Setter TargetName="Image" Property="Source" Value="/Inbox2.UI.Themes.Jedi;component/icons/icon-pinned.gif" /> 
                               <Setter TargetName="Image" Property="Width" Value="7" /> 
                               <Setter TargetName="Image" Property="Height" Value="10" />
                            <Setter TargetName="Image" Property="Margin" Value="0,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteConversationButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent"/>
                        <Path Grid.Column="1" x:Name="closeicon" Width="10" Height="13" Stretch="Fill" Fill="{DynamicResource FillOnLightBlue}" Data="F1 M 568.765,320L 615.697,320C 624.954,320 632.458,326.658 632.458,334.87L 632.458,345.951L 648.559,345.951C 652.241,345.951 655.225,348.936 655.225,352.617L 655.225,383.399C 655.225,387.081 652.241,390.066 648.559,390.066L 644.75,390.066L 644.75,466.399L 537.478,466.399L 537.478,390.066L 533.389,390.066C 529.707,390.066 526.722,387.081 526.722,383.399L 526.722,352.617C 526.722,348.936 529.707,345.951 533.389,345.951L 552.004,345.951L 552.004,334.87C 552.004,326.658 559.508,320 568.765,320 Z M 573.235,330.089C 567.681,330.089 563.178,334.084 563.178,339.011L 563.178,345.951L 619.328,345.951L 619.328,339.011C 619.328,334.084 614.826,330.089 609.272,330.089L 573.235,330.089 Z M 618.431,379.79C 614.728,379.79 611.726,382.792 611.726,386.495L 611.726,432.566C 611.726,436.269 614.728,439.271 618.431,439.271C 622.133,439.271 625.135,436.269 625.135,432.566L 625.135,386.495C 625.135,382.792 622.133,379.79 618.431,379.79 Z M 591.56,379.79C 587.857,379.79 584.855,382.792 584.855,386.495L 584.855,432.566C 584.855,436.269 587.857,439.271 591.56,439.271C 595.263,439.271 598.264,436.269 598.264,432.566L 598.264,386.495C 598.264,382.792 595.263,379.79 591.56,379.79 Z M 564.795,379.79C 561.092,379.79 558.09,382.792 558.09,386.495L 558.09,432.566C 558.09,436.269 561.092,439.271 564.795,439.271C 568.497,439.271 571.499,436.269 571.499,432.566L 571.499,386.495C 571.499,382.792 568.497,379.79 564.795,379.79 Z "/>
                        <ContentPresenter RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="6,4,6,5"/>
                                    <Setter Property="Width" Value="auto" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GlobalButtonBorderOverLine}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalSearchButtonOnLight" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-search.png" SnapsToDevicePixels="True" Width="14" Height="14" Margin="1,1,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonOnDark" BasedOn="{x:Null}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1">
                                <ContentPresenter />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GlobalSearchButtonOnDark" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-search-white-14.png" SnapsToDevicePixels="True" Width="14" Height="14" Margin="1,1,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProfileSearchButton" BasedOn="{StaticResource GlobalSearchButtonOnLight}" TargetType="{x:Type Button}" />

    <Style x:Key="GlobalBitlyButtonOnLight" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="19" Height="19" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                        <Border x:Name="border" CornerRadius="3" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <Border x:Name="innerBorder" CornerRadius="3" BorderThickness="1" />
                        </Border>
                        <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon-search.png" SnapsToDevicePixels="True" Width="14" Height="14" Margin="1,1,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShadowColor4}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HighlightColor10}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GlobalButtonGradientOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShowRelatedButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                            BorderBrush="{StaticResource AdsBorderBrush}"
                            BorderThickness="0,0,0,1"
                            SnapsToDevicePixels="True" />
                        <Rectangle x:Name="rectangle" Fill="{StaticResource MenuBackgroundBrush}" Stroke="{x:Null}" HorizontalAlignment="Stretch" Margin="0,0,0,0" Width="Auto"/>
                        <Canvas Margin="6">
                            <Ellipse Fill="{x:Null}" Stroke="#FFFFFFFF" StrokeThickness="1.5" Width="12" Height="12" Canvas.Left="5.576" Canvas.Top="0.241"/>
                            <Path Fill="{x:Null}" Stretch="Fill" Stroke="#FFFFFFFF" StrokeThickness="2" Width="9" Height="9" Data="M12,13.75 L5,20.75" Canvas.Left="0.326" Canvas.Top="8.241"/>
                        </Canvas>
                        <ContentPresenter RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="32,5,6,5"/>
                                    <Setter Property="Width" Value="auto" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource MenuPopupBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PreviousStepButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="23" Height="23">
                        <Ellipse Grid.Row="0" Grid.Column="0" Width="19" Height="19" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE9E9E9" Offset="0"/>
                                    <GradientStop Color="#FFD3D3D3" Offset="0.89"/>
                                    <GradientStop Color="#FFD3D3D3" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path Grid.Row="0" Grid.Column="0" RenderTransformOrigin="0.5,0.5" Width="5.44" Height="10.205" Fill="#FF6E6E6E" Stretch="Fill" Data="M5.4000001,15.696001 L9.7919998,15.696001 C10.368,15.696001 10.926001,15.876001 11.466001,16.236002 C12.006001,16.596001 12.528,17.136002 13.032,17.856001 L18.648001,28.008001 L13.032,38.304001 C12.48,39.096001 11.934,39.690002 11.394,40.085999 C10.854,40.482002 10.32,40.68 9.7919998,40.68 L5.3280001,40.68 L12.456,28.008001 z">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter TargetName="forwardicon" Property="Fill" Value="{DynamicResource FillOnLightBlue}" />
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource LightBlueGradient}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NextStepButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="23" Height="23">
                        <Ellipse Grid.Row="0" Grid.Column="0" Width="19" Height="19" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE9E9E9" Offset="0"/>
                                    <GradientStop Color="#FFD3D3D3" Offset="0.89"/>
                                    <GradientStop Color="#FFD3D3D3" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path Grid.Row="0" Grid.Column="0" RenderTransformOrigin="0,0" Width="5.44" Height="10.205" Fill="#FF6E6E6E" Stretch="Fill" Data="M5.4000001,15.696001 L9.7919998,15.696001 C10.368,15.696001 10.926001,15.876001 11.466001,16.236002 C12.006001,16.596001 12.528,17.136002 13.032,17.856001 L18.648001,28.008001 L13.032,38.304001 C12.48,39.096001 11.934,39.690002 11.394,40.085999 C10.854,40.482002 10.32,40.68 9.7919998,40.68 L5.3280001,40.68 L12.456,28.008001 z">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter TargetName="forwardicon" Property="Fill" Value="{DynamicResource FillOnLightBlue}" />
                            <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource LightBlueGradient}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RealTimeColumnButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1" Background="{StaticResource HighlightGradient4}" CornerRadius="5" VerticalAlignment="Center" Height="20" Margin="0,0,2,0">
                            <Border CornerRadius="5" ClipToBounds="True" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1">
                                <Border x:Name="border" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="0,0,1,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </Border>
                        </Border>                                               
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#44FFFFFF"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightGradient4}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}" />                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar Buttons -->
    <Style x:Key="CalendarColumnEventButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height"       Value="auto"/>
        <Setter Property="Width"        Value="6"/>
        <Setter Property="MinWidth"     Value="6"/>
        <Setter Property="Margin"       Value="1"/>
        <Setter Property="Cursor"       Value="Hand" />
        <Setter Property="Background"   Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!-- TODO Calendar Plugin: Dynamic colors -->
                        <Rectangle Stroke="#77FF0000" RadiusX="3" RadiusY="3" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
                                    <GradientStop Color="#66FF0000" Offset="0"/>
                                    <GradientStop Color="#FFFF0000" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="rectangle" Value="#55FF0000"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#60FF0000" Offset="0"/>
                                        <GradientStop Color="#30FF0000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#CCFF0000" Offset="0"/>
                                        <GradientStop Color="#38FF0000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <!--
                            
                            -->
                            <Setter Property="Stroke" TargetName="rectangle">
                                <Setter.Value>
                                    <SolidColorBrush Color="#33FF0000" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RecurrenceButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <!-- Properties -->
        <Setter Property="SnapsToDevicePixels"  Value="True"/>
        <Setter Property="MinWidth"             Value="20"/>

        <!-- Template -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Rectangle
                            x:Name="rectangle"
                            Fill="Transparent" Stroke="Transparent"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Margin="2,2"
                            Width="Auto" Height="Auto"
                            RadiusX="5" RadiusY="5"
                            Grid.ColumnSpan="2" />
                        <Image Source="/Inbox2.UI.Themes.Jedi;component/icons/icon_refresh.png" Width="16" Height="16" Margin="5,5,5,5" x:Name="image"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefault" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#2DFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" Value="#19FFFFFF" TargetName="rectangle"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#33000000" Offset="1"/>
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarColumnListViewButton" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="MinHeight"    Value="28" />
        <Setter Property="Foreground"   Value="#FFFFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                            BorderBrush="{StaticResource AdsBorderBrush}"
                            BorderThickness="0,0,0,1"
                            SnapsToDevicePixels="True" />
                        <Rectangle x:Name="rectangle" Fill="{StaticResource MenuBackgroundBrush}" Stroke="{x:Null}" HorizontalAlignment="Stretch" Margin="0,0,0,0" Width="Auto"/>
                        <!-- TODO CalendarPlugin: Calendar ListView Button -->
                        <Canvas Margin="6">
                            <Ellipse Fill="{x:Null}" Stroke="#FFFFFFFF" StrokeThickness="1.5" Width="12" Height="12" Canvas.Left="5.576" Canvas.Top="0.241"/>
                            <Path Fill="{x:Null}" Stretch="Fill" Stroke="#FFFFFFFF" StrokeThickness="2" Width="9" Height="9" Data="M12,13.75 L5,20.75" Canvas.Left="0.326" Canvas.Top="8.241"/>
                        </Canvas>
                        <ContentPresenter RecognizesAccessKey="True">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="#FFFFFFFF"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="32,5,6,5"/>
                                    <Setter Property="Width" Value="auto" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource MenuPopupBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QuickEditEventButtonHeader" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="1,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard3">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFA6B1B9"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard4">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="rectangle" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6C767D"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle Stroke="{x:Null}" x:Name="rectangle" Margin="0,0,0,0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF6C767D" Offset="0" />
                                    <GradientStop Color="#FF40464F" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" Opacity="0.115" VerticalAlignment="Top" Margin="0,0,0,0" Height="15"/>
                        <Border Style="{DynamicResource LightPixellineBorderStyle}" BorderThickness="0,1,0,0" />

                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="1" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Image
                                Grid.Row="0" Grid.Column="0"
                                HorizontalAlignment="Left" Margin="6"
                                Height="16" Width="16"
                                Source="pack://application:,,,/Inbox2.UI.Themes.Jedi;component/icons/icon_replyall_small.png" />
                            <ContentPresenter
                                Grid.Row="0" Grid.Column="1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                Margin="5,0,5,0" />
                            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Fill="{DynamicResource TitleBarSubBottomBrush}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard4}" x:Name="Storyboard4_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard3}" x:Name="Storyboard3_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PreviousMonthButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PreviousStepButton}">
        <Setter Property="Cursor" Value="Hand" />
        <!--<Setter Property="MinWidth" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Canvas>
                            <Path Data="M40,0 L0,20 L40,40 Z" Stroke="Red" Fill="{x:Null}" StrokeThickness="2" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    <Style x:Key="NextMonthButton" TargetType="{x:Type Button}" BasedOn="{StaticResource NextStepButton}">
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!-- ControlTemplate for a toggle button which removes the look -->
    <ControlTemplate x:Key="LookLessToggleButton" TargetType="{x:Type ToggleButton}">
        <ContentPresenter />
    </ControlTemplate>

</ResourceDictionary>