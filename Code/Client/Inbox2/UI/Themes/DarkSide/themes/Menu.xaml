<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="SharedDictionary.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">					
					<StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Background" Value="{StaticResource ColumnalMenuBackgroundBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border BorderBrush="{StaticResource AdsBorderBrush}" BorderThickness="1,1,1,0">
						<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" 
									Background="{StaticResource MenuPopupBackgroundBrush}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ColumnalMenuStyle -->
	<Style x:Key="ColumnalMenuStyle" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{StaticResource ColumnalMenuBackgroundBrush}"/>
	</Style>

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

	<Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<DockPanel Background="Transparent"
                     SnapsToDevicePixels="true">
						<Rectangle DockPanel.Dock="Right" x:Name="R1" Width="1" Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Bottom" x:Name="B1" Height="1" Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Left" x:Name="L1" Width="1" Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Top" x:Name="T1" Height="1" Fill="Transparent"/>
						<ContentPresenter x:Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="R1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter TargetName="L1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="1" Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
						</Border>						
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- SimpleStyles: MenuItem -->
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Margin" Value="0,4,0,4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{StaticResource AdsBorderBrush}" BorderThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Height="auto" VerticalAlignment="Stretch" Background="Transparent">
			<Grid>
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="15,5">
                    <ContentPresenter.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="White" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" Width="Auto">
					<Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource ContentBackground}" BorderThickness="1,1,1,0" BorderBrush="{StaticResource AdsBorderBrush}" Padding="0">
						<ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightGradient2}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- TopLevelItem -->

    <!-- TopLevelHeader for Light Splitbutton -->
    <Style TargetType="{x:Type MenuItem}" x:Key="LightButtonSplitMenuRight">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ShadowColor5}" BorderThickness="1,1,1,1" Background="{StaticResource HighlightGradient4}" CornerRadius="0,5,5,0" >
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="1" CornerRadius="0,5,5,0" />
                        </Border>
                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True"  VerticalAlignment="Center" Visibility="Hidden" Margin="7,5"/>
                        <Path x:Name="Arrow" Fill="{StaticResource TabAndLightButtonText}" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="5" Stretch="Fill" Data="M320,80 L351.5,80 335.5,103.5 z">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Popup 
                          Name="Popup"
                          Placement="Bottom"
                          IsOpen="{TemplateBinding IsSubmenuOpen}"
                          AllowsTransparency="True" 
                          Focusable="False"
                          PopupAnimation="Fade"
                          Width="Auto">
                            <Border 
                            Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource ContentBackground}"
                            BorderThickness="1,1,1,0" 
                            BorderBrush="{StaticResource AdsBorderBrush}"
                            Padding="0">
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="NewMessageSplitMenu">
                            <Setter TargetName="Popup" Property="HorizontalOffset" Value="-110"/>
                            <Setter TargetName="Popup" Property="MinWidth" Value="132"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="SendReceiveSplitMenu">
                            <Setter TargetName="Popup" Property="HorizontalOffset" Value="-110"/>
                            <Setter TargetName="Popup" Property="MinWidth" Value="132"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="BitlyButtonSplitMenuRight">
                            <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0,3,3,0" />
                            <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0,3,3,0" />
                            <Setter Property="Opacity" TargetName="Arrow" Value="0.7" />
                            <Setter Property="Width" Value="15" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource HighlightGradient1}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HighlightColor6}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor5}" />
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource TabAndLightButtonText}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsHighlighted" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource DefaultForegroundColor}" />
                        </MultiTrigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader for GodMode Splitbutton -->
    <Style TargetType="{x:Type MenuItem}" x:Key="GodModeSplitMenuRight">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource CallToActionHighLightGradient1}" BorderThickness="1,1,1,1" Background="{StaticResource CallToActionGradient1}" CornerRadius="0,5,5,0" >
                            <Border x:Name="InnerBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="0,5,5,0" />
                        </Border>
                        <ContentPresenter ContentSource="Header"  RecognizesAccessKey="True"  VerticalAlignment="Center" Visibility="Hidden" Margin="7,5"/>
                        <Path x:Name="Arrow" Fill="{StaticResource TabAndLightButtonText}" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="5" Stretch="Fill" Data="M320,80 L351.5,80 335.5,103.5 z">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Popup 
                          Name="Popup"
                          Placement="Bottom"
                          IsOpen="{TemplateBinding IsSubmenuOpen}"
                          AllowsTransparency="True" 
                          Focusable="False"
                          PopupAnimation="Fade"
                          Width="Auto">
                            <Border 
                            Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{StaticResource ContentBackground}"
                            BorderThickness="1,1,1,0" 
                            BorderBrush="{StaticResource AdsBorderBrush}"
                            Padding="0">
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource CallToActionGradient2}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource CallToActionHighLightGradient2}" />
                            <Setter Property="Visibility" TargetName="InnerBorder" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" Background="Transparent">
			<Grid>
				<ContentPresenter Margin="8,2" ContentSource="Header" RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuOverBrush}"/>
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border Name="Border" BorderThickness="0,0,0,1" BorderBrush="{StaticResource AdsBorderBrush}" Background="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="8,0,0,0" VerticalAlignment="Center" ContentSource="Icon" HorizontalAlignment="Left" />
                <ContentPresenter Grid.Column="1" Margin="8,2" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center" />
			</Grid>
		</Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuOverBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderThickness="0,0,0,1" BorderBrush="{StaticResource AdsBorderBrush}" Background="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/> <!---->
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="8,0,0,0" VerticalAlignment="Center" ContentSource="Icon" HorizontalAlignment="Left" />
                <ContentPresenter Grid.Column="1" Margin="8,2" ContentSource="Header" RecognizesAccessKey="True"  HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource DefaultForegroundColor}" Opacity="0.5" />
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource ContentBackground}" BorderBrush="{StaticResource AdsBorderBrush}" BorderThickness="1">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuOverBrush}"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Opacity" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- MenuItem Style -->

	<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Foreground" Value="White" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
				<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>