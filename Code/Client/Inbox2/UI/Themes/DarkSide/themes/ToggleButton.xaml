<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Dock Toggle Button Style -->
    <Style TargetType="ToggleButton" x:Key="DockToggleButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid DataContext="{Binding Value.Configuration, Converter={StaticResource ChannelIconConverter}, ConverterParameter=13}">
                        <Border BorderBrush="{StaticResource HighlightColor3}" BorderThickness="0,0,1,0" x:Name="border" />
                        <Image x:Name="ToggleButtonOnImage" Width="13" Stretch="Uniform" Source="{Binding}" Visibility="Hidden"  RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <Image x:Name="ToggleButtonOffImage" Width="13" Stretch="Uniform" Source="{Binding Converter={StaticResource BitmapFormatConverter}, ConverterParameter=Gray32Float}" Visibility="Visible"  RenderOptions.BitmapScalingMode="NearestNeighbor" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#44FFFFFF"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightGradient4}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="ToggleButtonOnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ToggleButtonOffImage" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="SimpleChannelToggleButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid DataContext="{Binding Value.Configuration, Converter={StaticResource ChannelIconConverter}, ConverterParameter=13}">
                        <Border BorderBrush="{StaticResource HighlightColor3}" BorderThickness="0,0,1,0" x:Name="border" />
                        <Image x:Name="ToggleButtonOnImage" Width="13" Stretch="Uniform" Source="{Binding}" Visibility="Hidden"  RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <Image x:Name="ToggleButtonOffImage" Width="13" Stretch="Uniform" Source="{Binding Converter={StaticResource BitmapFormatConverter}, ConverterParameter=Gray32Float}" Visibility="Visible"  RenderOptions.BitmapScalingMode="NearestNeighbor" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#44FFFFFF"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightGradient4}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="ToggleButtonOnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ToggleButtonOffImage" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ToggleButton" x:Key="RealTimeColumnToggleButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid DataContext="{Binding Value.Configuration, Converter={StaticResource ChannelIconConverter}, ConverterParameter=10}">
                        <Border x:Name="border" BorderBrush="{StaticResource HighlightColor3}" BorderThickness="0,0,1,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <Image x:Name="ToggleButtonOnImage" Width="10" Stretch="Uniform" Source="{Binding}" Visibility="Hidden"  RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" />
                        <Image x:Name="ToggleButtonOffImage" Width="10" Stretch="Uniform" Source="{Binding Converter={StaticResource BitmapFormatConverter}, ConverterParameter=Gray32Float}"  VerticalAlignment="Center" Visibility="Visible" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#44FFFFFF"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightGradient4}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="ToggleButtonOnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ToggleButtonOffImage" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ToggleButton" x:Key="FullChannelToggleButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="MinWidth" Value="28"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border BorderBrush="{StaticResource HighlightColor3}" BorderThickness="0,0,1,0" x:Name="border" />
                        <StackPanel Orientation="Horizontal" Margin="6,0,4,0">
                            <Grid DataContext="{Binding Value.Configuration, Converter={StaticResource ChannelIconConverter}, ConverterParameter=13}">
                                <Image x:Name="ToggleButtonOnImage" Width="13" Stretch="Uniform" Source="{Binding}" Visibility="Collapsed" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                <Image x:Name="ToggleButtonOffImage" Width="13" Stretch="Uniform" Source="{Binding Converter={StaticResource BitmapFormatConverter}, ConverterParameter=Gray32Float}" Visibility="Visible"  RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            </Grid>

                            <TextBlock Text="{Binding Value.Configuration.InputChannel.Authentication.Username}" Style="{StaticResource NormalTextBlock}" Margin="2,0,2,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#44FFFFFF"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HighlightGradient4}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="ToggleButtonOnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ToggleButtonOffImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ToggleButton" x:Key="SwitcherToggleIconButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Margin" Value="0,4,-1,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border BorderBrush="#26FFFFFF" BorderThickness="1" x:Name="border">
                            <Rectangle x:Name="rectangle">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#12000000" Offset="0"/>
                                        <GradientStop Color="#12FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Image Source="/Inbox2.UI.Themes.DarkSide;component/icons/icon-view-activity.gif" SnapsToDevicePixels="True" Width="13" Height="14"  x:Name="SwitcherIcon" Opacity="0.6"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="Name" Value="ViewSwitcherActivity">
                            <Setter TargetName="SwitcherIcon" Property="Source" Value="/Inbox2.UI.Themes.DarkSide;component/icons/icon-view-activity.gif" />
                            <Setter Property="CornerRadius" TargetName="border" Value="4,0,0,4"/>
                        </Trigger>
                        <Trigger Property="Name" Value="ViewSwitcherOneRule">
                            <Setter TargetName="SwitcherIcon" Property="Source" Value="/Inbox2.UI.Themes.DarkSide;component/icons/icon-view-one-line.gif" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,4,4,0"/>
                        </Trigger>
                        <Trigger Property="Name" Value="TogglePreviewButton">
                            <Setter TargetName="SwitcherIcon" Property="Source" Value="/Inbox2.UI.Themes.DarkSide;component/icons/icon-split-view-horizontal.png" />
                            <Setter Property="CornerRadius" TargetName="border" Value="4"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#44FFFFFF"/>
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="SwitcherIcon" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="SwitcherIcon" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Toolbar Tab Button Style -->
    <Style TargetType="ToggleButton" x:Key="ToolbarTabButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource TabAndLightButtonText}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid" Margin="-1,0,0,0">
                        <Border BorderBrush="{StaticResource HighlightColor4}" BorderThickness="1,0" x:Name="OuterBorder" Margin="0,1,0,0" Background="Transparent"/>
                        <Border Padding="10,0,10,0" x:Name="border" BorderThickness="1,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#30FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ShadowColor6}" />                            
                            <Setter Property="BorderThickness" TargetName="border" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ShadowColor1}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ShadowColor6}" />
                            <Setter Property="BorderThickness" TargetName="border" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Header Option Button Style -->
    <Style TargetType="ToggleButton" x:Key="HeaderOptionsButton">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="MinWidth" Value="25"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Margin" Value="0,0,3,0"/>
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<Rectangle Fill="Transparent"/>
						<Rectangle Margin="0,4" Stroke="#26FFFFFF" RadiusX="5" RadiusY="5" x:Name="rectangle">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
									<GradientStop Color="#12000000" Offset="0"/>
									<GradientStop Color="#12FFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<ContentPresenter Margin="9,-2,9,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" RecognizesAccessKey="True">
							<ContentPresenter.Resources>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Foreground" Value="#cce3ff" />
								</Style>
							</ContentPresenter.Resources>
						</ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.25" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="rectangle" Value="#44FFFFFF"/>
							<Setter Property="Fill" TargetName="rectangle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
										<GradientStop Color="#00000000" Offset="0"/>
										<GradientStop Color="#30FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource PressedBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource PressedBorderBrush}"/>
							<Setter Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="HeaderToggleButton" BasedOn="{x:Null}" TargetType="{x:Type ToggleButton}" >
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="0,0,0,-2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{StaticResource HighlightGradient6}" BorderBrush="{StaticResource HighlightColor7}" x:Name="OuterBorder" BorderThickness="0,0,0,1">
                        <Border BorderBrush="{StaticResource ShadowColor8}" Background="Transparent" BorderThickness="0,0,0,1" x:Name="MiddleBorder">
                            <Border BorderBrush="{StaticResource ShadowColor7}" BorderThickness="0,1,0,0" x:Name="InnerBorder">
                                <Border BorderBrush="{StaticResource HighlightColor2}" BorderThickness="0,1,0,0" x:Name="InnerBorder2">
                                    <Grid Background="Transparent">
                                        <Image Source="/Inbox2.UI.Themes.DarkSide;component/icons/icon-search-white.png" Width="19" Height="19" Margin="10,0,5,0" x:Name="image" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="10,0" x:Name="CP"/>
                                        <Path x:Name="Arrow" Fill="{StaticResource DefaultClickableColor}" SnapsToDevicePixels="True" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0" Width="8" Height="5" Stretch="Fill" Data="M320,80 L351.5,80 335.5,103.5 z">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="90"/>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MiddleBorder" Property="Background" Value="{StaticResource HighlightGradient9}"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="NoSeperation">
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="MiddleBorder" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="IsProductivityHeader">
                            <Setter TargetName="image" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CP" Property="Margin" Value="30,0,10,0"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="IsLabelsHeader">
                            <Setter TargetName="image" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CP" Property="Margin" Value="30,0,10,0"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="IsFirst">
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ShadowColor1}"/>
                            <Setter TargetName="InnerBorder2" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Margin" Value="0"/>
                            <Setter TargetName="Arrow" Property="Margin" Value="0,2,10,0"/>
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar Buttons -->
    <Style x:Key="CalendarColumnDayToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Stroke="#33FFFFFF" Fill="Transparent" />
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rectangle" Property="Stroke" Value="#AAAACFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="rectangle" Property="Stroke" Value="#AAFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rectangle" Property="Stroke" Value="#AACFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>